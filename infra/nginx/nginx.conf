# HTTP -> redirecci√≥n a HTTPS
server {
    listen 80;
    server_name letsmarter.com www.letsmarter.com;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS
server {
    listen 443 ssl http2;
    server_name letsmarter.com www.letsmarter.com;

    ssl_certificate     /etc/letsencrypt/live/letsmarter.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/letsmarter.com/privkey.pem;

    # Seguridad recomendada
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    # Frontend
    location / {
        root   /usr/share/nginx/html;
        index  index.html;
        try_files $uri /index.html;
    }
    
    location = /env-config.js {
        root   /usr/share/nginx/html;
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
        expires off;
    }

    # API
    location /api/ {
        proxy_pass http://api_prod:3303/api/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

        # WebSocket (socket.io)
    location /socket.io/ {
        proxy_pass http://api_prod:3303/socket.io/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }


}
